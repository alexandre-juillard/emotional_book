services:
  mysql:
    image: mysql:8.0
    container_name: emo-mysql
    restart: unless-stopped
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-emotionalbook}
      MYSQL_USER: ${MYSQL_USER:-emo}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-emo_pwd}
    command:
      - "--default-authentication-plugin=caching_sha2_password"
      - "--character-set-server=utf8mb4"
      - "--collation-server=utf8mb4_0900_ai_ci"
    volumes:
      - ${DB_VOLUME:-emo-mysql}:/var/lib/mysql
      - ./db/mysql/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql:ro
      - ./db/mysql/seeds_emotion_taxonomy.sql:/docker-entrypoint-initdb.d/02-seeds_emotion_taxonomy.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -uroot -p${MYSQL_ROOT_PASSWORD} --silent"]
      interval: 10s
      timeout: 5s
      retries: 6
    networks:
      - emotionalbook

  adminer:
    image: adminer:latest
    container_name: emo-adminer
    restart: unless-stopped
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      ADMINER_DEFAULT_SERVER: mysql
    ports:
      - "${ADMINER_PORT:-8081}:8080"
    networks:
      - emotionalbook

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: emo-api
    restart: unless-stopped
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      API_PORT: ${API_PORT:-8080}
      DB_HOST: mysql
      DB_PORT: 3306
      DB_NAME: ${MYSQL_DATABASE:-emotionalbook}
      DB_USER: ${MYSQL_USER:-emo}
      DB_PASSWORD: ${MYSQL_PASSWORD:-emo_pwd}
    ports:
      - "${API_PORT:-8080}:8080"
    networks:
      - emotionalbook

networks:
  emotionalbook:
    name: emotionalbook

volumes:
  emo-mysql:
    name: emo-mysql
